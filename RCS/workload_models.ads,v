head	1.3;
access;
symbols;
locks; strict;
comment	@-- @;


1.3
date	2008.11.24.02.05.39;	author baker;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.20.18.49.43;	author baker;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.19.12.04.57;	author baker;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@--  $Id: workload_models.ads,v 1.2 2008/11/20 18:49:43 baker Exp baker $

--  This is just a root for deriving actual classes.

with Jobs;
with Virtual_Times; use Virtual_Times;
package Workload_Models is

   type Object is abstract tagged null record;
   type Class_Ref is access all Object'Class;

   function Start_Time (M: Object) return Time is abstract;

   procedure Arrive (M : in out Object;
                     T : in Time;
                     J : out Jobs.Job;
                     Next_Arrival_Time : out Time) is abstract;

   function Utilization (M : Object) return Float is abstract;

   function Name (Model : Object) return String is abstract;

end Workload_Models;
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
--  $Id: workload_models.ads,v 1.1 2008/11/19 12:04:57 baker Exp baker $
d12 1
a12 1
   function Start_Time (M: in Object) return Time is abstract;
d19 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
--  $Id$
d16 1
a16 1
                     J : out Jobs.Object;
@

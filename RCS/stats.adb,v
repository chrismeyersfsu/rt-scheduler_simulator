head	1.4;
access;
symbols;
locks; strict;
comment	@-- @;


1.4
date	2008.11.24.02.05.39;	author baker;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.23.21.33.20;	author baker;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.20.18.49.43;	author baker;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.19.12.04.57;	author baker;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@--  $Id: stats.adb,v 1.3 2008/11/23 21:33:20 baker Exp baker $

package body Stats is

   procedure End_Of_Job_Update
     (D : in out Data;
      RT : Time; -- response time
      Deadline : Time;
      Exec_Time : Time;
      Now : Time) is
   begin
      if RT > D.Max_Resp_Time then
         D.Max_Resp_Time := RT;
      end if;
      D.Total_Exec_Time := D.Total_Exec_Time + Exec_Time;
      D.Total_Resp_Time := D.Total_Resp_Time + Float (RT);
      D.Total_Sq_Resp_Time := D.Total_Sq_Resp_Time + Float (RT) ** 2;
      D.Job_Count := D.Job_Count + 1;
      if Now > Deadline then
         D.Missed_Deadlines := D.Missed_Deadlines + 1;
      end if;
   end End_Of_Job_Update;

end Stats;
@


1.3
log
@*** empty log message ***
@
text
@d1 1
a1 1
--  $Id: stats.adb,v 1.2 2008/11/20 18:49:43 baker Exp baker $
d17 1
a17 1
      D.Total_Sq_Resp_Time := D.Total_Sq_Resp_Time + Float (RT)**2;
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
--  $Id: stats.adb,v 1.1 2008/11/19 12:04:57 baker Exp baker $
d9 1
d12 2
a13 2
      if RT > D.Max_Response_Time then
         D.Max_Response_Time := RT;
d15 3
a17 2
      D.Total_Response_Time :=
        D.Total_Response_Time + RT;
d20 1
a20 2
         D.Missed_Deadlines :=
           D.Missed_Deadlines + 1;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
--  $Id$
a2 1
with Simulator;
d4 2
a5 2
   
   procedure Update
d8 2
a9 2
      Deadline : Time) is
      Now : Time := Simulator.Current_Time;
d18 1
a18 1
         D.Missed_Deadlines := 
d21 1
a21 1
   end Update;
@

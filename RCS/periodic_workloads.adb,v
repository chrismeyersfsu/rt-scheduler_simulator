head	1.4;
access;
symbols;
locks; strict;
comment	@-- @;


1.4
date	2008.11.24.02.05.39;	author baker;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.20.18.49.43;	author baker;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.19.14.25.53;	author baker;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.19.12.04.57;	author baker;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@--  $Id: periodic_workloads.adb,v 1.3 2008/11/20 18:49:43 baker Exp baker $

package body Periodic_Workloads is

   procedure Bind_Parms (M : in out Object;
                         P : Parameters) is
   begin
      M.Parms := P;
      Pragma Assert (P.WCET in 0 .. P.Period);
   end Bind_Parms;

   function Utilization (M : Object) return Float is
   begin
      return Float (M.Parms.WCET) / Float (M.Parms.Period);
   end Utilization;

   procedure Arrive (M : in out Object;
                     T : in Time;
                     J : out Jobs.Job;
                     Next_Arrival_Time : out Time) is
   begin
      J.Arrival_Time := T;
      J.Execution_Time := M.Parms.WCET;
      J.Absolute_Deadline := T + M.Parms.Deadline;
      Next_Arrival_Time := T + M.Parms.Period;
   end Arrive;

   function Start_Time (M : Object) return Time is
   begin
      return 0;
   end Start_Time;

   function Name (Model : Object) return String is
   begin
      return "periodic";
   end Name;

end Periodic_Workloads;
@


1.3
log
@*** empty log message ***
@
text
@d1 1
a1 1
--  $Id: periodic_workloads.adb,v 1.2 2008/11/19 14:25:53 baker Exp baker $
d9 1
d12 5
d28 1
a28 1
   function Start_Time (M : in Object) return Time is
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
--  $Id: periodic_workloads.adb,v 1.1 2008/11/19 12:04:57 baker Exp baker $
d5 2
a6 2
   procedure Init (M : in out Object;
                   P : Parameters) is
d9 1
a9 1
   end Init;
d13 1
a13 1
                     J : out Jobs.Object;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
--  $Id$
d6 1
a6 1
                   P : Parameters_Type) is
@
